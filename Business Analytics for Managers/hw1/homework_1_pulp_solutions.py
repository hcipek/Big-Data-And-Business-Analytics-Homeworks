# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D247kZiLhNRJ_S8Q3TXGYbD8LnJq0R07
"""

#!pip install pulp
from pulp import LpVariable, LpMaximize, LpStatus, LpProblem

prob= LpProblem("asdas",LpMaximize) 

OIL = LpVariable("Purchased Barrels of Oil", lowBound=0, cat='Continuous')

AVIATION_DIRECTLY = LpVariable("Aviation Fuel Barrels Sold Directly", lowBound=0, cat='Continuous')
AVIATION_CCRACKER = LpVariable("Aviation Fuel Barrels Sold Processed In the Catalytic Cracker", lowBound=0, cat='Continuous')

HEATING_OIL_DIRECTLY = LpVariable("Heating Oil Barrels Sold Directly", lowBound=0, cat='Continuous')
HEATING_OIL_CCRACKER = LpVariable("Heating Oil Barrels Sold Processed In the Catalytic Cracker", lowBound=0, cat='Continuous')

#LP Model to maximize profit
prob += 60*AVIATION_DIRECTLY + 130*AVIATION_CCRACKER + 40*HEATING_OIL_DIRECTLY + 90*HEATING_OIL_CCRACKER - 40*OIL
#available barrel supply
prob += OIL <= 20, "MAX SUPPLY"
#Total aviation fuel must be half of distillation
prob += 0.5*OIL - AVIATION_DIRECTLY - AVIATION_CCRACKER == 0, "MAX_AVIATION_FUEL"
#Total heating oil must be half of distillation
prob += 0.5*OIL - HEATING_OIL_DIRECTLY - HEATING_OIL_CCRACKER == 0, "MAX_HEATING_OIL"
#total hours is 8, we need to divide our factor to max barrel can produced per hour
#for AVIATION 1000 barrels per hour, HEATING 1000 barrels per 45 minutes which is 0.75
prob += AVIATION_CCRACKER + 0.75*HEATING_OIL_CCRACKER <= 8, "MAX_CRACKER_HOUR"

# The prob is solved using PuLP's choice of Solver
prob.solve()

# The status of the solution is printed to the screen
print("Status:", LpStatus[prob.status])

# Each of the variables is printed with it's resolved optimum value
for v in prob.variables():
    print(v.name, "=", v.varValue)
# The optimised objective function value is printed to the screen
print("Total Cost of the Process = ", prob.objective.value(), '$')

import pandas as pd
#Report sensivity Analysis
print("\nSensivity Analysis")

Cons_Sensivity_Report = [{'Constraint_Name':name,'Slack':c.slack,"Shadow_Price":c.pi}
                        for name, c in prob.constraints.items()]  
print(pd.DataFrame(Cons_Sensivity_Report))
print("\n")
Variable_Sensitivity_Report = [{'Variable_Name': v.name, 'Value':v.varValue,'Reduced_Cost': v.dj}
                               for v in prob.variables()]

print(pd.DataFrame(Variable_Sensitivity_Report)[['Variable_Name','Value','Reduced_Cost']])



"""```
Requirement already satisfied: pulp in /usr/local/lib/python3.7/dist-packages (2.5.1)
Status: Optimal
Aviation_Fuel_Barrels_Sold_Directly = 2.0
Aviation_Fuel_Barrels_Sold_Processed_In_the_Catalytic_Cracker = 8.0
Heating_Oil_Barrels_Sold_Directly = 10.0
Heating_Oil_Barrels_Sold_Processed_In_the_Catalytic_Cracker = 0.0
Purchased_Barrels_of_Oil = 20.0
Total Cost of the Process =  760.0 $

Sensivity Analysis
     Constraint_Name  Slack  Shadow_Price
0         MAX_SUPPLY   -0.0          10.0
1  MAX_AVIATION_FUEL   -0.0         -60.0
2    MAX_HEATING_OIL   -0.0         -40.0
3   MAX_CRACKER_HOUR   -0.0          70.0


                                       Variable_Name  Value  Reduced_Cost
0                Aviation_Fuel_Barrels_Sold_Directly    2.0           0.0
1  Aviation_Fuel_Barrels_Sold_Processed_In_the_Ca...    8.0           0.0
2                  Heating_Oil_Barrels_Sold_Directly   10.0           0.0
3  Heating_Oil_Barrels_Sold_Processed_In_the_Cata...    0.0          -2.5
4                           Purchased_Barrels_of_Oil   20.0           0.0
```


"""

#Google Colab is used for solution 

#Adding install pulp in case of code run seperated from first question solution
#!pip install pulp 
from pulp import LpVariable, LpMinimize, LpStatus, LpProblem

prob = LpProblem("Minimize_Cost_Problem",LpMinimize)

#Decision Variables of LP
regular1 = LpVariable("Week 1 Regular Production", lowBound=0, upBound=160)
regular2 = LpVariable("Week 2 Regular Production", lowBound=0, upBound=160)
regular3 = LpVariable("Week 3 Regular Production", lowBound=0, upBound=160)
regular4 = LpVariable("Week 4 Regular Production", lowBound=0, upBound=160)
regular5 = LpVariable("Week 5 Regular Production", lowBound=0, upBound=160)
regular6 = LpVariable("Week 6 Regular Production", lowBound=0, upBound=160)

overtime1 = LpVariable("Week 1 Overtime Production", lowBound=0, upBound=50)
overtime2 = LpVariable("Week 2 Overtime Production", lowBound=0, upBound=50)
overtime3 = LpVariable("Week 3 Overtime Production", lowBound=0, upBound=50)
overtime4 = LpVariable("Week 4 Overtime Production", lowBound=0, upBound=50)
overtime5 = LpVariable("Week 5 Overtime Production", lowBound=0, upBound=50)
overtime6 = LpVariable("Week 6 Overtime Production", lowBound=0, upBound=50)

extra1 = LpVariable("Week 1 Extra Production", lowBound=0)
extra2 = LpVariable("Week 2 Extra Production", lowBound=0)
extra3 = LpVariable("Week 3 Extra Production", lowBound=0)
extra4 = LpVariable("Week 4 Extra Production", lowBound=0)
extra5 = LpVariable("Week 5 Extra Production", lowBound=0)

#Objective Function for Minimize Z
prob += 190*(regular1+regular2+regular3+regular4+regular5+regular6)+260*(overtime1+overtime2+overtime3+overtime4+overtime5+overtime6)+10*(extra1+extra2+extra3+extra4+extra5)

#Constraints of Problem
prob += regular1+overtime1-extra1 == 105, "Week 1 Orders"
prob += regular2+overtime2+extra1-extra2 == 170, "Week 2 Orders"
prob += regular3+overtime3+extra2-extra3 == 230, "Week 3 Orders"
prob += regular4+overtime4+extra3-extra4 == 180, "Week 4 Orders"
prob += regular5+overtime5+extra4-extra5 == 150, "Week 5 Orders"
prob += regular6+overtime6+extra5 == 250, "Week 6 Orders"

prob.solve()


print("Status:", LpStatus[prob.status])

for v in prob.variables():
    print(v.name, "=", v.varValue)
print("Total Cost of the Process = ", prob.objective.value())

import pandas as pd
#Report sensivity Analysis
print("\nSensivity Analysis")


Cons_Sensivity_Report = [{'Constraint_Name':name,'Slack':c.slack,"Shadow_Price":c.pi}
                        for name, c in prob.constraints.items()]  
print(pd.DataFrame(Cons_Sensivity_Report))
print("\n")
Variable_Sensitivity_Report = [{'Variable_Name': v.name, 'Value':v.varValue,'Reduced_Cost': v.dj}
                               for v in prob.variables()]

print(pd.DataFrame(Variable_Sensitivity_Report)[['Variable_Name','Value','Reduced_Cost']])

"""```
Requirement already satisfied: pulp in /usr/local/lib/python3.7/dist-packages (2.5.1)
Status: Optimal
Week_1_Extra_Production = 55.0
Week_1_Overtime_Production = 0.0
Week_1_Regular_Production = 160.0
Week_2_Extra_Production = 45.0
Week_2_Overtime_Production = 0.0
Week_2_Regular_Production = 160.0
Week_3_Extra_Production = 0.0
Week_3_Overtime_Production = 25.0
Week_3_Regular_Production = 160.0
Week_4_Extra_Production = 0.0
Week_4_Overtime_Production = 20.0
Week_4_Regular_Production = 160.0
Week_5_Extra_Production = 40.0
Week_5_Overtime_Production = 30.0
Week_5_Regular_Production = 160.0
Week_6_Overtime_Production = 50.0
Week_6_Regular_Production = 160.0
Total Cost of the Process =  216300.0

Sensivity Analysis
  Constraint_Name  Slack  Shadow_Price
0   Week_1_Orders   -0.0         240.0
1   Week_2_Orders   -0.0         250.0
2   Week_3_Orders   -0.0         260.0
3   Week_4_Orders   -0.0         260.0
4   Week_5_Orders   -0.0         260.0
5   Week_6_Orders   -0.0         270.0


                 Variable_Name  Value  Reduced_Cost
0      Week_1_Extra_Production   55.0           0.0
1   Week_1_Overtime_Production    0.0          20.0
2    Week_1_Regular_Production  160.0         -50.0
3      Week_2_Extra_Production   45.0           0.0
4   Week_2_Overtime_Production    0.0          10.0
5    Week_2_Regular_Production  160.0         -60.0
6      Week_3_Extra_Production    0.0          10.0
7   Week_3_Overtime_Production   25.0           0.0
8    Week_3_Regular_Production  160.0         -70.0
9      Week_4_Extra_Production    0.0          10.0
10  Week_4_Overtime_Production   20.0           0.0
11   Week_4_Regular_Production  160.0         -70.0
12     Week_5_Extra_Production   40.0           0.0
13  Week_5_Overtime_Production   30.0           0.0
14   Week_5_Regular_Production  160.0         -70.0
15  Week_6_Overtime_Production   50.0         -10.0
16   Week_6_Regular_Production  160.0         -80.0
```
"""